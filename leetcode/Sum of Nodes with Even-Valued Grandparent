/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    unordered_map<int,int> mpp;
    int ans = 0;
    void solve(TreeNode* root,int level)
    {
        if(!root) return;
        //todo
        if((level-2)>=0)
        {
            if(mpp[level-2]%2==0)
            {
                
                ans+=root->val;
                cout<<root->val<<endl;
            }
        }
        mpp[level] = root->val;
        solve(root->left,level+1);
        solve(root->right,level+1);
        mpp.erase(level);
        return;
    }
    int sumEvenGrandparent(TreeNode* root) {
        solve(root,0);
        return ans;
    }
};
